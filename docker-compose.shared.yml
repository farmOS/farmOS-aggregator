version: '3.3'
services:
  frontend:
    environment:
      # General aggregator configuration.
      - AGGREGATOR_NAME
      - FARM_ACTIVE_AFTER_REGISTRATION
      - AGGREGATOR_OAUTH_INSECURE_TRANSPORT
      - AGGREGATOR_OPEN_FARM_REGISTRATION
      - AGGREGATOR_INVITE_FARM_REGISTRATION
      - AGGREGATOR_OAUTH_CLIENT_ID
      - AGGREGATOR_OAUTH_CLIENT_SECRET
      - AGGREGATOR_OAUTH_SCOPES
      - AGGREGATOR_OAUTH_DEFAULT_SCOPES
      - AGGREGATOR_OAUTH_REQUIRED_SCOPES
  backend:
    depends_on:
      - db
    environment:
      # Configuration for postgres DB.
      - POSTGRES_SERVER
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      # Configuration for backend app.
      - BACKEND_CORS_ORIGINS
      - SECRET_KEY
      - FIRST_SUPERUSER
      - FIRST_SUPERUSER_PASSWORD
      - SMTP_TLS
      - SMTP_PORT
      - SMTP_HOST
      - SMTP_USER
      - SMTP_PASSWORD
      - EMAILS_FROM_EMAIL
      - USERS_OPEN_REGISTRATION
      # Configure aggregator admin errors
      - AGGREGATOR_ALERT_NEW_FARMS
      - AGGREGATOR_ALERT_ALL_ERRORS
      - AGGREGATOR_ALERT_PING_FARMS_ERRORS
      # General aggregator configuration.
      - AGGREGATOR_NAME
      - FARM_ACTIVE_AFTER_REGISTRATION
      - AGGREGATOR_OAUTH_INSECURE_TRANSPORT
      - AGGREGATOR_OPEN_FARM_REGISTRATION
      - AGGREGATOR_INVITE_FARM_REGISTRATION
      - AGGREGATOR_OAUTH_CLIENT_ID
      - AGGREGATOR_OAUTH_CLIENT_SECRET
      - AGGREGATOR_OAUTH_SCOPES
      - AGGREGATOR_OAUTH_DEFAULT_SCOPES
      - AGGREGATOR_OAUTH_REQUIRED_SCOPES
  db:
    image: postgres:11
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_SERVER
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
  proxy:
    image: nginx:stable-alpine
    depends_on:
      - backend
      - frontend
